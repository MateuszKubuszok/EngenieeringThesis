# Logger levels:
# - DEBUG - The DEBUG Level designates fine-grained informational events that are most useful to debug an application. 
# - TRACE - similar to DEBUG level. 
# - INFO  - The INFO level designates informational messages that highlight the progress of the application at coarse-grained level. 
# - WARN  - The WARN level designates potentially harmful situations.
# - ERROR - The ERROR level designates error events that might still allow the application to continue running.
# - FATAL - The FATAL level designates very severe error events that will presumably lead the application to abort. 
# - ALL   - The ALL Level has the lowest possible rank and is intended to turn on all logging.
# - OFF   - The OFF Level has the highest possible rank and is intended to turn off logging.

# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=repoServerApplication.log
log4j.appender.file.MaxFileSize=1MB
log4j.appender.file.MaxBackupIndex=1
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
 
# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

 
# Root logger option
log4j.rootLogger=INFO, file, stdout


# RepoApplication logger
log4j.logger.com.autoupdater.server.controllers=DEBUG
log4j.logger.com.autoupdater.server.services=DEBUG
log4j.logger.com.autoupdater.server.utils=DEBUG
log4j.logger.com.autoupdater.server.validators=DEBUG

 
# Hibernate logging config

# Log all SQL DML statements as they are executed (TRACE level for )
log4j.logger.org.hibernate.SQL=OFF
# Log all JDBC parameters
log4j.logger.org.hibernate.type=OFF
# Log all SQL DDL statements as they are executed
log4j.logger.org.hibernate.tool.hbm2ddl=OFF
# Log the state of all entities (max 20 entities) associated with the session at flush time
log4j.logger.org.hibernate.pretty=OFF
# Log all second-level cache activity
log4j.logger.org.hibernate.cache=OFF
# Log transaction related activity
log4j.logger.org.hibernate.transaction=OFF
# Log all JDBC resource acquisition	
log4j.logger.org.hibernate.jdbc=OFF
# Log HQL and SQL ASTs during query parsing
log4j.logger.org.hibernate.hql.internal.ast.AST=OFF
# Log all JAAS authorization requests
log4j.logger.org.hibernate.secure=OFF
# Log everything. This is a lot of information but it is useful for troubleshooting
log4j.logger.org.hibernate=OFF